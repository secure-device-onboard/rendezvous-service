#############################################################################
#                         [INTEL CONFIDENTIAL]                              #
#                                                                           #
#                   Copyright 2019 Intel Corporation                        #
#                                                                           #
# This software and the related documents are Intel copyrighted materials,  #
# and your use of them is governed by the express license under which they  #
# were provided to you (License). Unless the License provides otherwise,    #
# you may not use, modify, copy, publish, distribute, disclose or transmit  #
# this software or the related documents without Intel's prior written      #
# permission.                                                               #
#                                                                           #
# This software and the related documents are provided as is, with no       #
# express or implied warranties, other than those that are expressly stated #
# in the License.                                                           #
#############################################################################

#############################################################################
# This is an example script to demonstrate out-of-box execution of the      #
# component.                                                                #
# Appropriate security measures with respect to key-store management and    #
# configuration management should be considered while production deployment.# 
#############################################################################

version: '2.4'

services:

    redis:
        image: redis
        container_name: redis
        command: redis-server
        expose:
            - "6379"
        ports:
            - "6379:6379"
        build:
            context: .
            dockerfile: Dockerfile-redis
        restart: on-failure:5
        network_mode: host
        healthcheck:
            test: ["CMD", "redis-cli","ping"]
            interval: 30s
            timeout: 10s
            retries: 3
        cpu_shares: 5
        mem_limit: 50m
        mem_reservation: 10m
        pids_limit: 100

    u-rendezvous-service:
        image: rendezvous-service:1.9
        container_name: rendezvous-service
        expose:
            - "8000"
        ports:
            - "8000:8000"
            - "8001:8001"
        build:
            context: .
            dockerfile: Dockerfile-rendezvous 
        restart: on-failure:5
        network_mode: host
        healthcheck:
            test: wget --spider -Y off http://localhost:8001/mp/113/health || exit 1 
            interval: 1m
            timeout: 30s
            retries: 1
        cpu_shares: 5
        mem_limit: 500m
        mem_reservation: 200m
        env_file:
          - ./rendezvous.env
        pids_limit: 100
